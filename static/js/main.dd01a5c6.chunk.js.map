{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","toggleMode1","toggleMode2","TextForm","useState","Text","setText","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","abouttext","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd01a5c6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title} </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n           <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode1} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Dark Green</label>\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode2} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Brown</label>\r\n        </div>\r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n         \r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\nabouttext:PropTypes.string,\r\n\r\n\r\n}\r\n// Navbar.defaultProps ={\r\n//     title: \"set text here\",\r\n//     abouttext:\"about set here\"\r\n// }","import React, {useState} from \"react\"\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n const handleUpClick = () =>{\r\n    let newText = Text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted To UpperCase\",\"success\")\r\n\r\n }\r\n const handleloClick = () =>{\r\n   let newText = Text.toLowerCase();\r\n   setText(newText)\r\n   \r\n   props.showAlert(\"Converted To LowerCase\",\"success\")\r\n\r\n}\r\nconst handleClearClick = () =>{\r\n   let newText = '';\r\n   setText(newText);\r\n   \r\n   props.showAlert(\"Cleared the Text\",\"success\")\r\n\r\n}\r\n\r\n const handleOnChange = (event) =>{\r\n    console.log(\"OnChange\")\r\n    setText(event.target.value)\r\n}\r\nconst handleCopy=()=>{\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    \r\n    props.showAlert(\"Copied to ClipBoard\",\"success\")\r\n}\r\nconst handleExtraSpaces = ()=>{\r\n    let newText = Text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    \r\n    props.showAlert(\"Remove Extra Spaces\",\"success\")\r\n\r\n}\r\n\r\n\r\nconst [Text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div >\r\n           <div className=\" container my-3\"  style={{color: props.mode==='dark'?'white':'#042743'}} > \r\n        <h1>{props.heading}  </h1>\r\n             <textarea className=\"form-control\" value={Text} id=\"mybox\" style={{backgroundColor: props.mode==='dark'?'gray':'white', color: props.mode==='dark'?'white':'#042743'}} onChange={handleOnChange} rows=\"7\"></textarea>\r\n           </div>\r\n           <button className=\" btn btn-primary mx-1\"  onClick={handleUpClick}>\r\n               Convert To UpperCase\r\n           </button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleloClick}>\r\n               Convert To LowerCase\r\n           </button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleCopy}> CopyTaxt </button>\r\n           <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}> Remove Extra Spaces </button>\r\n           \r\n           <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}> Clear Text </button>\r\n      \r\n\r\n      </div>\r\n      <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n          <h1>Your Text Summery</h1>\r\n          <p>{Text.split(\" \").length} words and {Text.length} charactors</p>\r\n          \r\n          <p> {0.008 * Text.split(\" \").length }Minutes to read</p>\r\n          <h2>Preview</h2>\r\n          <p>{Text.length>0?Text:\"Enter something in the textbox to Preview it here\"}</p>\r\n      </div>\r\n      </>\r\n\r\n\r\n\r\n    )\r\n}\r\n"," \r\n import React from \"react\"\r\n function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    } \r\n    return (\r\n         props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong>{capitalize(props.alert.type)}</strong>  :{props.alert.msg}       \r\n</div>\r\n    )\r\n}\r\nexport default Alert","\nimport './App.css';\n// import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n    const showAlert =(message, type)=>{\n       setAlert({\n         msg: message,\n         type: type\n       })\n       setTimeout(() => {\n         setAlert(null);\n       }, 1500);\n\n    }\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark has been Enable\",\"success\");\n      document.title=\"Textutils = Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Light Mode\";\n    }\n  }\n  const toggleMode1=()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor='#00584e';\n      showAlert(\"Green Color has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Green Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Light Mode\";\n    }\n  }\n  const toggleMode2=()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor='#6d564e';\n      showAlert(\"Gray Color has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Gray Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light has been Enable\",\"success\");\n      \n      document.title=\"Textutils = Light Mode\";\n    }\n  }\n  return (\n<>\n{/* <Router> */}\n <Navbar title=\"Textutils\" abouttext= \"About\" mode={mode}  toggleMode={toggleMode} toggleMode1={toggleMode1} toggleMode2={toggleMode2}/> \n<Alert alert={alert}/>\n\n<div className=\"container my-3\">\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n <TextForm showAlert={showAlert} heading=\"Enter text to Analyze Below\" mode={mode}/>\n {/* </Route> */}\n          \n        {/* </Switch> */}\n\n </div>\n {/* </Router> */}\n\n</>\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}